@page "/carro"
@inject ICarroService CarroService

<PageTitle>Carriño da Compra</PageTitle>
<h3>Carriño da compra</h3>

@if (carroProductos == null || carroProductos.Count == 0)
{
    <span>@mensaxe</span>
}
else
{
    <div>
        @foreach (var producto in carroProductos)
        {
            <div class="container">
                <div class="imaxe-wrapper">
                    <img src="@producto.ImaxeUrl" class="imaxe" />
                </div>
                <div class="nome">
                    <h5><a href="/producto/@producto.ProductoId">@producto.Titulo</a></h5>
                    <span>@producto.ProductoType</span><br />
                    <input type="number" value="@producto.Cantidade"
                @onchange="@((ChangeEventArgs e) => UpdateCantidade(e, producto))"
                class="form-control entrada-cantidade" min="1" />
                    <button class="btn-delete"
                @onclick="@(() => RemoveProductoDeCarro(producto.ProductoId, producto.ProductoTypeId))">
                        Quitar
                    </button>
                </div>
                <div class="carro-producto-precio">@(producto.Precio * producto.Cantidade)€</div>
            </div>
        }
        <div class="carro-producto-precio">
            Total (@carroProductos.Count): @carroProductos.Sum(producto => @producto.Precio * producto.Cantidade)€
        </div>
    </div>
}

@code {
    List<CarroProductoRespostaDto> carroProductos = null;
    string mensaxe = "Cargando carro.....";

    protected override async Task OnInitializedAsync()
    {
        await CargarCarro();
    }

    private async Task RemoveProductoDeCarro(int productoId, int productoTypeId)
    {
        await CarroService.RemoveProductoDeCarro(productoId, productoTypeId);
        await CargarCarro();
    }

    private async Task CargarCarro()
    {
        await CarroService.GetCarroItemsCount();
        carroProductos = await CarroService.GetCarroProductos();
        if (carroProductos == null || carroProductos.Count == 0)
        {
            mensaxe = "O teu carro esta vacio";
        }
    }

    private async Task UpdateCantidade(ChangeEventArgs e, CarroProductoRespostaDto producto)
    {
        producto.Cantidade = int.Parse(e.Value.ToString());
        if (producto.Cantidade < 1)
        {
            producto.Cantidade = 1;
        }
        await CarroService.UpdateCantidade(producto);
    }
}
