@page "/admin/producto-types"
@inject IProductoTypeService ProductoTypeService
@implements IDisposable
@attribute [Authorize(Roles = "Admin")]

<h3>Tipos de producto</h3>

@foreach (var productoType in ProductoTypeService.ProductoTypes)
{
    @if (productoType.Editar)
    {
        <EditForm Model="editarProductoType" OnSubmit="UpdateProductoType">
            <div class="row">
                <div class="col">
                    <InputText @bind-Value="editarProductoType.Nome" class="form-control"></InputText>
                </div>
                <div class="col">
                    <button type="submit" class="btn btn-primary">
                        <i class="oi oi-cloud-upload"></i>
                    </button>
                </div>
            </div>
        </EditForm>
    }
    else
    {
        <div class="row">
            <div class="col">
                @productoType.Nome
            </div>
            <div class="col">
                <button class="btn btn-primary" @onclick="@(() => EditarProductoType(productoType))">
                    <i class="oi oi-pencil"></i>
                </button>
            </div>
        </div>
    }
}
<button class="btn btn-primary" @onclick="CreateNovoProductoType">
    <i class="oi oi-plus"></i> Engadir novo producto
</button>

@code {
    ProductoType editarProductoType = null;

    protected override async Task OnInitializedAsync()
    {
        await ProductoTypeService.GetProductoTypes();
        ProductoTypeService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        ProductoTypeService.OnChange -= StateHasChanged;
    }

    private void EditarProductoType(ProductoType productoType)
    {
        productoType.Editar = true;
        editarProductoType = productoType;
    }

    private void CreateNovoProductoType()
    {
        editarProductoType = ProductoTypeService.CreateNovoProductoType();
    }

    private async Task UpdateProductoType()
    {
        if (editarProductoType.IsNew)
        {
            await ProductoTypeService.AddProductoType(editarProductoType);
        }
        else
        {
            await ProductoTypeService.UpdateProductoType(editarProductoType);
        }
        editarProductoType = new ProductoType();
    }
}
