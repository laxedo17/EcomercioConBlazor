@page "/login"
@using Microsoft.AspNetCore.WebUtilities
@inject IAuthService AuthService
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ICarroService CarroService

<PageTitle>Login</PageTitle>

<EditForm Model="usuario" OnValidSubmit="ManexarLogin">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="usuario.Email" class="form-control" />
        <ValidationMessage For="@(() => usuario.Email)" />
    </div>
    <div class="mb-3">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="usuario.Password" class="form-control" type="password" />
        <ValidationMessage For="@(() => usuario.Password)" />
    </div>
    <button type="submit" class="btn btn-primary">Entrar</button>
</EditForm>
<div class="text-danger">
    <span>@mensaxeError</span>
</div>

@code {
    private UserLogin usuario = new UserLogin();
    private string mensaxeError = string.Empty;

    private string returnUrl = string.Empty;

    protected override void OnInitialized()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("returnUrl", out var url))
        {
            returnUrl = url;
        }
    }

    private async Task ManexarLogin()
    {
        var resultado = await AuthService.Login(usuario); //engadimos o modelo de Usuario porque conten o email e o password
        if (resultado.Exito)
        {
            mensaxeError = string.Empty;

            await LocalStorage.SetItemAsync("authToken", resultado.Data);
            await AuthenticationStateProvider.GetAuthenticationStateAsync();
            await CarroService.GardarItemsCarro(true); //gardamos os elementos do carro e vaciamos o localstorage
            await CarroService.GetCarroItemsCount();
            NavigationManager.NavigateTo(returnUrl);
        }
        else
        {
            mensaxeError = resultado.Mensaxe;
        }
    }
}
