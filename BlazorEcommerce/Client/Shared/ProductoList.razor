@using BlazorEcommerce.Shared
@inject IProductoService ProductoService
@implements IDisposable

@if (ProductoService.Productos == null || ProductoService.Productos.Count == 0)
{
    <span>Cargando Productos...</span>
}
else
{
    <ul class="list-unstyled">
        @foreach (var producto in ProductoService.Productos)
        {
            <li class="media my-3">
                <div class="media-img-wrapper mr-2">
                    <a href="/producto/@producto.Id">
                        <img class="media-img" src="@producto.ImaxeUrl" alt="@producto.Titulo" />
                    </a>
                </div>
                <div class="media-body">
                    <a href="/producto/@producto.Id">
                        <h4 class="mb-0">@producto.Titulo</h4>
                    </a>
                    <p>@producto.Descripcion</p>
                    <h5 class="price">
                        @producto.Precio€
                    </h5>
                </div>
            </li>
        }
    </ul>
}


@code {
    protected override void OnInitialized()
    {
        ProductoService.ProductosCambiaron += StateHasChanged; //isto indica ao razor component o estado cambiou
    }

    public void Dispose()
    {
        ProductoService.ProductosCambiaron -= StateHasChanged;
    }
}
